swagger: "2.0"
info:
  version: "0.0.1"
  title: Toolkit API
  description: Toolkit API documentation and test
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /document:
    x-swagger-router-controller: document
    post:
      tags: 
      - documents
      - upload
      summary: Uploads a document
      description: Uploads a document
      operationId: saveFile
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: file
        in: formData
        description: file to upload
        required: true
        type: file
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"
  /document/{documentHash}:
    x-swagger-router-controller: document
    get:
      tags: 
      - documents
      - download
      summary: Gets a document by its hash
      description: Gets a document from IPFS using its hash
      operationId: getFile
      produces:
      - application/pdf
      - image/jpeg
      - image/png
      parameters:
      - name: documentHash
        in: path
        description: Document hash
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: file
        400:
          description: The document with the provided hash hasn't been found
  /validate:
    x-swagger-router-controller: document
    post:
      tags: 
      - documents
      - validate
      summary: Uploads a document to be validated
      description: Uploads a document, calculates its IPFS hash, looks for it on the blockchain and determines if it was uploaded using this toolkit.
      operationId: validateFile
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: file
        in: formData
        description: file to validate
        required: true
        type: file
      responses:
        200:
          description: successful operation
          schema:
            type: boolean
            description: true if it was uploaded using this toolkit, otherwise, false.
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ApiResponse:
    properties:
      transaction:
        type: object
        properties:
          tx:
            type: string
          hash:
            type: string
